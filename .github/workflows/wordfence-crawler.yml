name: ðŸ•· Wordfence crawler

on:
  schedule:
    - cron: '25 3 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Process vulnerabilities from Wordfence API (production)
        run: |
          python src/main.py --api_endpoint https://www.wordfence.com/api/intelligence/v2/vulnerabilities/production --tag production --overwrite --clean

      - name: Process vulnerabilities from Wordfence API (scanner)
        run: |
          python src/main.py --api_endpoint https://www.wordfence.com/api/intelligence/v2/vulnerabilities/scanner --tag candidate --overwrite

      - name: Commit new, updated and deleted templates individually
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          echo "Processing deleted files..."
          for file in $(git ls-files --deleted); do
            git rm "$file" >/dev/null 2>&1 || true
            git commit -m "Deleted Nuclei template: $(basename "$file") ðŸ¤–"
          done

          echo "Processing new files..."
          for file in $(git ls-files --others --exclude-standard | grep '\.yaml$'); do
            git add "$file"
            git commit -m "Added new Nuclei template: $(basename "$file") ðŸ¤–"
          done

          echo "Processing modified files..."
          for file in $(git diff --name-only --diff-filter=M | grep '\.yaml$'); do
            git add "$file"
            git commit -m "Updated Nuclei template: $(basename "$file") ðŸ¤–"
          done

      - name: Push all commits
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.SECRET_TOKEN }}
